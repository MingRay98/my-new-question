{"version":3,"sources":["component/header/styles.js","component/header/Header.jsx","App.js","component/content/styles.js","component/content/input/styles.js","component/content/input/Input.jsx","component/content/question/Question.jsx","component/content/outcome/Outcome.jsx","component/content/Content.jsx","App.jsx","serviceWorker.js","index.js"],"names":["stlyes","fontSize","boxShadow","display","width","margin","justifyContent","background","borderRadius","icon","Header","props","state","className","css","Component","injectGlobal","styles","flexDirection","maxWidth","containter","height","backgroundImage","innerContainer","alignItems","containters","color","Input","useState","name","setName","style","type","placeholder","onChange","e","target","value","onClick","handleSubmit","topic","1","title","ans","option","2","3","4","5","6","7","8","9","10","topicIndex","Question","ansElement","handleLabelStyle","para","String","question","correctAns","backgroundColor","setQuestion","userAns","setUserAns","setCorrectAns","QA","map","index","key","ref","inputElement","parseInt","handleOnChange","required","onSubmit","preventDefault","checked","handleScore","handleFinish","Outcome","score","initialState","haveName","finish","Content","input","setState","ps","setScore","setFinsih","this","id","App","window","innerHeight","setHeight","useEffect","addEventListener","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f914c94c.chunk.js","sourcesContent":["export const stlyes = {\r\n  container: {\r\n    fontSize: '2rem',\r\n    boxShadow: \"0 0 1rem 0.5rem rgba(0, 0, 0, 0.5)\",\r\n    display: 'flex',\r\n    width: '100%',\r\n    margin: '2.5% 0 0',\r\n    justifyContent: 'space-between',\r\n    background: 'linear-gradient(47deg,#22c1c3,#fdbb2d)',\r\n    borderRadius: '50px',\r\n\r\n    icon: {\r\n      margin: '0 2.5% 0',\r\n      '@media (max-width: 700px)': {\r\n        fontSize: '1.5rem',\r\n      },\r\n    },\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport {css} from 'emotion';\r\nimport {stlyes} from './styles';\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={css(stlyes.container)}>\r\n        <div className={css(stlyes.container.icon)}>☰</div>\r\n        <div className={css(stlyes.container.icon)}>你跟吳彥祖的麻吉度 </div>\r\n        <div className={css(stlyes.container.icon)}>🌐</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import {injectGlobal} from 'emotion'\n\ninjectGlobal`\n  * {\n    font-family: 微軟正黑體;\n  }\n`\nexport const styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-evenly',\n    margin: 'auto',\n    width: '70vw',\n    maxWidth: '700px',\n    '@media (max-width: 700px)': {\n      width: '95vw'\n    }\n  }\n}","export const styles = {\r\n  containter: {\r\n    height: '90%',\r\n    width: '100%',\r\n    backgroundImage: 'linear-gradient(47deg,#59398b,#994329)',\r\n    margin: 'auto auto',\r\n    borderRadius: '25px'\r\n  },\r\n  innerContainer: {\r\n    margin: '5%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100%',\r\n  }\r\n}","export const styles = {\r\n  containters: {\r\n    color: 'white',\r\n  },\r\n}","import React, {Component, useState} from 'react';\r\nimport {styles} from './styles';\r\n\r\nconst Input = (props) => {\r\n  const [name, setName] = useState('');\r\n  return (\r\n    <div style={styles.containters}>\r\n      <input type=\"text\" placeholder=\"請輸入Your Name Plz\" onChange={(e) => {setName(e.target.value)}} />\r\n      <button className='btn btn-dark' onClick={() => props.handleSubmit(name)}>提交</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input;","import React, {Component, useState, useContext, useEffect} from 'react';\r\n\r\nconst topic = {\r\n  1: {\r\n    title: '韓國瑜為什麼喜歡吃科學麵',\r\n    ans: \"3\",\r\n    option: [\"因為很便宜\", \"因為很好吃\", \"因為有含粉\", \"因為裡面有暗黑版陳菊\", \"因為吃了可以發大財\"]\r\n  },\r\n  2: {\r\n    title: '吳彥祖平常上班都怎麼當薪水小倫',\r\n    ans: \"1\",\r\n    option: [\"上班偷大BANG\", \"偷滑手機\", \"偷打LOL\", \"看油土伯\", \"怎麼可能會當薪水小倫\"]\r\n  },\r\n  3: {\r\n    title: '吳彥祖大一的體重是?',\r\n    ans: \"7\",\r\n    option: [\"超過100\", \"95\", \"90\", \"85\", \"80\", \"75\", '70']\r\n  },\r\n  4: {\r\n    title: \"吳彥祖前身是誰\",\r\n    ans: \"3\",\r\n    option: [\"九孔\", '韓國瑜', \"黃曉明\", \"黃登輝\", \"黃子蕉\", '黃大謙', '孔鏘']\r\n  },\r\n  5: {\r\n    title: '吳彥祖是資深什麼粉',\r\n    ans: \"5\",\r\n    option: [\"含粉\", \"菸粉\", \"柯糞\", \"動粉\", \"統粉\"]\r\n  },\r\n  6: {\r\n    title: '吳彥祖會看下列哪個油土伯',\r\n    ans: \"5\",\r\n    option: [\"重量級\", \"米砂\", \"孫安佐\", \"蔡哥\", \"那個抄襲女生kiki\"]\r\n  },\r\n  7: {\r\n    title: '吳彥祖手搖杯都點什麼',\r\n    ans: \"2\",\r\n    option: [\"波多椰\", \"紅茶拿鐵加波霸\", \"波霸紅\", \"早餐點奶茶\", \"大杯咒\"]\r\n  },\r\n  8: {\r\n    title: '問答最大秘密時什麼',\r\n    ans: \"5\",\r\n    option: [\"拉進來，打出去\", \"跟神明說不會再選市長\", \"超買不是走私\", \"兩岸一家親\", \"答錯的扣分，答對的加分\"]\r\n  },\r\n  9: {\r\n    title: '吳彥祖會想看下列哪一部電影',\r\n    ans: \"5\",\r\n    option: [\"大尾盧曼2\", \"刺0\", \"雞排英雄\", \"環大西洋\", \"鬼陰驚(2013年真的有上映)\"]\r\n  },\r\n  10: {\r\n    title: '吳彥祖會想看下列哪一部電影2',\r\n    ans: \"5\",\r\n    option: [\"大尾盧曼2\", \"刺0\", \"雞排英雄\", \"環大西洋\", \"鬼陰驚(2013年真的有上映)\"]\r\n  }\r\n}\r\n\r\nvar topicIndex = 1;\r\n\r\nexport const Question = (props) => {\r\n\r\n\r\n  let ansElement;\r\n\r\n  const handleLabelStyle = (para) => {\r\n    if (String(para) === question.ans) {\r\n      if (correctAns === true) return {backgroundColor: 'green'}\r\n      if (correctAns === false) return {backgroundColor: 'red'}\r\n    }\r\n  }\r\n\r\n  const [question, setQuestion] = useState(topic[1])\r\n  const [userAns, setUserAns] = useState('');\r\n  const [correctAns, setCorrectAns] = useState(null)\r\n\r\n  const title = question.title;\r\n  const QA = question.option.map((title, index) =>\r\n    <div>\r\n      <input key={index} type=\"radio\" name=\"question\" value={index + 1}\r\n        ref={(inputElement) => index + 1 === parseInt(userAns) && (ansElement = inputElement)}\r\n        onChange={(e) => handleOnChange(e)} required />\r\n      <label style={handleLabelStyle(index + 1)}>\r\n        {title}\r\n      </label>\r\n    </div>\r\n  )\r\n\r\n\r\n  const handleOnChange = (e) => {\r\n    setUserAns(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n\r\n    if (userAns === question.ans) {\r\n      setCorrectAns(true)\r\n    } else {\r\n      setCorrectAns(false)\r\n    }\r\n    e.preventDefault();\r\n  }\r\n\r\n  let handleNextBtn = () => {\r\n    if(topicIndex !== 10){\r\n    topicIndex = topicIndex + 1;\r\n    setCorrectAns(null)\r\n    setQuestion(topic[topicIndex])\r\n    ansElement.checked = false;\r\n    props.handleScore()\r\n    } else{\r\n      props.handleScore()\r\n      props.handleFinish();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <p>{title}</p>\r\n        {QA}\r\n        {correctAns === null && <input className='btn btn-primary' type=\"submit\" value=\"Submit\" />}\r\n        {correctAns !== null && < button className='btn btn-dark' onClick={handleNextBtn} > Next</button>}\r\n      </form>\r\n    </>\r\n  )\r\n\r\n}","import React, {Component} from 'react';\r\n\r\nexport const Outcome = (props) => {\r\n  return (\r\n    <>\r\n      {props.name} 得分為: {props.score}\r\n      <div>結束</div>\r\n    </>\r\n  )\r\n}","import React, {Component} from 'react';\r\nimport {css} from 'emotion';\r\nimport {styles} from './styles';\r\nimport Input from './input/Input'\r\nimport {Question} from './question/Question'\r\nimport {Outcome} from './outcome/Outcome'\r\n\r\n\r\n\r\nconst initialState = {\r\n  name: '',\r\n  score: 0,\r\n  haveName: false,\r\n  finish: false,\r\n}\r\n\r\nclass Content extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = initialState;\r\n  }\r\n\r\n  setName = (input) => {\r\n    this.setState((ps) => ({...ps, name: input, haveName: true}))\r\n  }\r\n\r\n  setScore = () => {\r\n    const {score} = this.state\r\n    this.setState((ps) => ({...ps, score: score + 10}))\r\n  }\r\n\r\n  setFinsih = () => {\r\n    this.setState((ps) => ({...ps, finish: true}))\r\n  }\r\n\r\n  render() {\r\n    const {haveName, finish, name, score} = this.state;\r\n    return (\r\n      <div className={css(styles.containter)}>\r\n        <div id='innerContainer' style={styles.innerContainer}>\r\n          {!haveName && <Input handleSubmit={this.setName} />}\r\n          {haveName && !finish && <Question handleScore={this.setScore} handleFinish={this.setFinsih} />}\r\n          {finish && <Outcome name={name} score={score} />}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;","import React, {useState, useEffect} from 'react';\nimport Header from './component/header/Header';\nimport {css} from 'emotion';\nimport {styles} from './App.js'\nimport Content from './component/content/Content';\n\n\nconst App = (props) => {\n\n  const [height, setHeight] = useState(window.innerHeight)\n  useEffect(() => {\n  }, [])\n\n  window.addEventListener('resize', () => {\n    setHeight(window.innerHeight)\n  });\n\n  return (\n    <div id=\"mainContainer\" className={css(styles.container)} style={{height: height + 'px'}} >\n      <Header></Header>\n      <Content></Content>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}